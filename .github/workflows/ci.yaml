name: Release

on:
  workflow_dispatch:
  release:
    types: [published]

env:
  project_url: "https://github.com/${{github.repository}}"
  # only the paths since there are multiple modules in one release
  latest_manifest_url: "https://github.com/${{github.repository}}/releases/latest/download/"
  release_download_url: "https://github.com/${{github.repository}}/releases/download/${{github.event.release.tag_name}}/"

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Extract Version From Tag
        id: get_version
        run: |
          TAG=${{ github.event.release.tag_name }}
          echo "VERSION=${TAG#v}" >> $GITHUB_ENV

      - name: build
        run: |
          yarn install
          yarn build

      - name: Create zip and rename/enrich module.json files for each language module
        run: |
          for build in dist/*/ ; do            # dist/en/
            lang=${build:5:2}                  # en
            module="wiki-${lang}-rqg/"         # wiki-en-rqg/
            zip_file="wiki-${lang}-rqg.zip"    # wiki-en-rqg.zip
            manifest="${lang}-module.json"     # en-module.json
            man_file="${build%/}-module.json"  # dist/en-module.json

            mkdir "${module}"                                         # Create language output folder wiki-en-rqg
            cp -r "${build}"* "${module}"                             # copy the build to wiki-en-rqg
            mv "${build}"module.json "${man_file}"                    # rename module.json to en-module.json
            sed -i "s|#{URL}#|${{ env.project_url }}|" "${man_file}"  # add data to en-module.json
            sed -i "s|#{VERSION}#|${VERSION}|" "${man_file}"
            sed -i "s|#{MANIFEST}#|${{ env.latest_manifest_url }}${manifest}|" "${man_file}"
            sed -i "s|#{DOWNLOAD}#|${{ env.release_download_url }}${zip_file}|" "${man_file}"
            cp "${man_file}" "${module}module.json"                   # add updated en-module.json to output folder as module.json
            zip -r "${zip_file}" "${module}"                          # create wiki-en-rqg.zip
          done

      #      - name: Display structure of downloaded files
      #        run: ls -R

      # Update the GitHub release with the manifest and module archive files.
      - name: Update Release With Files
        id: create_version_release
        uses: ncipollo/release-action@v1
        with:
          allowUpdates: true
          name: ${{ github.event.release.name }}
          draft: ${{ github.event.release.unpublished }}
          prerelease: ${{ github.event.release.prerelease }}
          token: ${{ secrets.GITHUB_TOKEN }}
          artifacts: "./dist/*module.json, ./*.zip"
          tag: ${{ github.event.release.tag_name }}
          body: ${{ github.event.release.body }}
